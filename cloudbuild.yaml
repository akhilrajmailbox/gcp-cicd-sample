# [START cloudbuild]
steps:

# - name: 'gcr.io/cloud-builders/gcloud'
#   id: Download Secrets
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - |
#       apt-get update && apt-get install jq -y \
#       && export SECRET_VERSION=$(jq '.secretVersion' ./svc_info.json | sed -e 's/^"//' -e 's/"$//') \
#       && gcloud secrets versions access $${SECRET_VERSION} --secret=${_SECRET_NAME} > ./k8s/secret-configmap.yaml

# building docker image
- name: 'gcr.io/cloud-builders/docker'
  id: Build Docker Image
  args:
  - 'build'
  - '-t'
  - '${_IMAGE_NAME}:${BRANCH_NAME}'
  - '-f'
  - './dockerfiles/Dockerfile'
  - './dockerfiles'
  waitFor: ['-']

# # pushing to the registry
# - name: 'gcr.io/cloud-builders/docker'
#   id: Push Image to Registry
#   args:
#   - 'push'
#   - '${_IMAGE_NAME}:${BRANCH_NAME}'
#   waitFor: ['Build Docker Image']

# # updating the configmap
# - name: "gcr.io/cloud-builders/gke-deploy"
#   id: create Configmap on K8s
#   args:
#   - apply
#   - --namespace=${_K8S_NAMESPACE}
#   - --filename=./k8s/configmap.yaml
#   - --location=${_K8S_LOCATION}
#   - --cluster=${_K8S_CLUSTER}
#   - --verbose
#   waitFor: ['-']

# # Rotate the pods with new docker image
# - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#   id: Update Deployment with Latest Image
#   entrypoint: 'kubectl'
#   args: ["-n", "${_K8S_NAMESPACE}", "set", "env", "deployment/webserver-deployment", "DEPLOYMENT_ID=${COMMIT_SHA}"]
#   env:
#     - 'CLOUDSDK_COMPUTE_REGION=${_K8S_LOCATION}'
#     - 'CLOUDSDK_CONTAINER_CLUSTER=${_K8S_CLUSTER}'
#     - '_K8S_NAMESPACE=${_K8S_NAMESPACE}'
#   waitFor: ['Push Image to Registry', 'create Configmap on K8s']

# # Rotate the pods with new docker image
# - name: "gcr.io/cloud-builders/gke-deploy"
#   id: Update Deployment with Latest Image
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - |
#       export _DEPLOYMENT_ID=$(python3 -c 'import uuid; _DEPLOYMENT_ID=str(uuid.uuid4()); print(_DEPLOYMENT_ID)') \
#       && gcloud container clusters get-credentials ${_K8S_CLUSTER} --region ${_K8S_LOCATION} --project ${PROJECT_ID} \
#       && kubectl -n ${_K8S_NAMESPACE} set env deployment/webserver-deployment DEPLOYMENT_ID=$${_DEPLOYMENT_ID}
#   env:
#     - '_K8S_NAMESPACE=${_K8S_NAMESPACE}'
#     - '_K8S_CLUSTER=${_K8S_CLUSTER}'
#     - '_K8S_LOCATION=${_K8S_LOCATION}'
#     - 'PROJECT_ID=${PROJECT_ID}'


# # k8s deployment / upgrade
# - name: 'gcr.io/cloud-builders/gke-deploy'
#   id: Deploy the Application
#   entrypoint: 'bash'
#   args: [ './deploy.sh' ]
#   env:
#     - '_K8S_NAMESPACE=${_K8S_NAMESPACE}'
#     - '_K8S_CLUSTER=${_K8S_CLUSTER}'
#     - '_K8S_LOCATION=${_K8S_LOCATION}'
#     - '_DOCKER_IMAGE=${_IMAGE_NAME}:${_IMAGE_VERSION}'
#     - 'PROJECT_ID=${PROJECT_ID}'

substitutions:
  _IMAGE_NAME: gcr.io/${PROJECT_ID}/webserver
  _K8S_NAMESPACE: demo-dev
  _K8S_LOCATION: us-east1
  _K8S_CLUSTER: test-cluster

# [END cloudbuild]